/**
 * Fax.to REST API client for Javascript
 * This is Fax.to REST API client for Javascript.
 *
 * OpenAPI spec version: 2.0.0
 * Contact: inquiries@fax.to
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.0-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/InlineResponse200', 'model/InlineResponse2001', 'model/InlineResponse20010', 'model/InlineResponse20011', 'model/InlineResponse2002', 'model/InlineResponse2003', 'model/InlineResponse2008', 'model/InlineResponse2009', 'model/InlineResponse400'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('../model/InlineResponse200'), require('../model/InlineResponse2001'), require('../model/InlineResponse20010'), require('../model/InlineResponse20011'), require('../model/InlineResponse2002'), require('../model/InlineResponse2003'), require('../model/InlineResponse2008'), require('../model/InlineResponse2009'), require('../model/InlineResponse400'));
  } else {
    // Browser globals (root is window)
    if (!root.FaxtoRestApiClientForJavascript) {
      root.FaxtoRestApiClientForJavascript = {};
    }
    root.FaxtoRestApiClientForJavascript.FaxSendingApi = factory(root.FaxtoRestApiClientForJavascript.ApiClient, root.FaxtoRestApiClientForJavascript.InlineResponse200, root.FaxtoRestApiClientForJavascript.InlineResponse2001, root.FaxtoRestApiClientForJavascript.InlineResponse20010, root.FaxtoRestApiClientForJavascript.InlineResponse20011, root.FaxtoRestApiClientForJavascript.InlineResponse2002, root.FaxtoRestApiClientForJavascript.InlineResponse2003, root.FaxtoRestApiClientForJavascript.InlineResponse2008, root.FaxtoRestApiClientForJavascript.InlineResponse2009, root.FaxtoRestApiClientForJavascript.InlineResponse400);
  }
}(this, function(ApiClient, InlineResponse200, InlineResponse2001, InlineResponse20010, InlineResponse20011, InlineResponse2002, InlineResponse2003, InlineResponse2008, InlineResponse2009, InlineResponse400) {
  'use strict';

  /**
   * FaxSending service.
   * @module api/FaxSendingApi
   * @version 2.0.0
   */

  /**
   * Constructs a new FaxSendingApi. 
   * @alias module:api/FaxSendingApi
   * @class
   * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;


    /**
     * Callback function to receive the result of the faxDocumentIdCostsGet operation.
     * @callback module:api/FaxSendingApi~faxDocumentIdCostsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse2001} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * This API is for computing the cost of the fax to be sent
     * @param {Number} documentId The id of the document to be sent
     * @param {String} apiKey 
     * @param {Object} opts Optional parameters
     * @param {String} opts.faxNumber The fax number of the recipient
     * @param {module:api/FaxSendingApi~faxDocumentIdCostsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InlineResponse2001}
     */
    this.faxDocumentIdCostsGet = function(documentId, apiKey, opts, callback) {
      opts = opts || {};
      var postBody = null;

      // verify the required parameter 'documentId' is set
      if (documentId === undefined || documentId === null) {
        throw new Error("Missing the required parameter 'documentId' when calling faxDocumentIdCostsGet");
      }

      // verify the required parameter 'apiKey' is set
      if (apiKey === undefined || apiKey === null) {
        throw new Error("Missing the required parameter 'apiKey' when calling faxDocumentIdCostsGet");
      }


      var pathParams = {
        'document_id': documentId
      };
      var queryParams = {
        'fax_number': opts['faxNumber'],
      };
      var collectionQueryParams = {
      };
      var headerParams = {
        'api_key': apiKey
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = ['application/json', 'application/xml'];
      var accepts = ['application/json', 'application/xml'];
      var returnType = InlineResponse2001;

      return this.apiClient.callApi(
        '/fax/{document_id}/costs', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the faxHistoryGet operation.
     * @callback module:api/FaxSendingApi~faxHistoryGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse2003} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * This API gets the history of a fax
     * @param {String} apiKey 
     * @param {Object} opts Optional parameters
     * @param {String} opts.limit The number of record to return
     * @param {String} opts.page The page you want to get
     * @param {module:api/FaxSendingApi~faxHistoryGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InlineResponse2003}
     */
    this.faxHistoryGet = function(apiKey, opts, callback) {
      opts = opts || {};
      var postBody = null;

      // verify the required parameter 'apiKey' is set
      if (apiKey === undefined || apiKey === null) {
        throw new Error("Missing the required parameter 'apiKey' when calling faxHistoryGet");
      }


      var pathParams = {
      };
      var queryParams = {
        'limit': opts['limit'],
        'page': opts['page'],
      };
      var collectionQueryParams = {
      };
      var headerParams = {
        'api_key': apiKey
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = ['application/json', 'application/xml'];
      var accepts = ['application/json', 'application/xml'];
      var returnType = InlineResponse2003;

      return this.apiClient.callApi(
        '/fax-history', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the faxJobIdStatusGet operation.
     * @callback module:api/FaxSendingApi~faxJobIdStatusGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse2002} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * This API gets the status of a fax
     * @param {Number} faxJobId The id of the fax job
     * @param {String} apiKey 
     * @param {module:api/FaxSendingApi~faxJobIdStatusGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InlineResponse2002}
     */
    this.faxJobIdStatusGet = function(faxJobId, apiKey, callback) {
      var postBody = null;

      // verify the required parameter 'faxJobId' is set
      if (faxJobId === undefined || faxJobId === null) {
        throw new Error("Missing the required parameter 'faxJobId' when calling faxJobIdStatusGet");
      }

      // verify the required parameter 'apiKey' is set
      if (apiKey === undefined || apiKey === null) {
        throw new Error("Missing the required parameter 'apiKey' when calling faxJobIdStatusGet");
      }


      var pathParams = {
        'fax_job_id': faxJobId
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
        'api_key': apiKey
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = ['application/json', 'application/xml'];
      var accepts = ['application/json', 'application/xml'];
      var returnType = InlineResponse2002;

      return this.apiClient.callApi(
        '/fax/{fax_job_id}/status', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the faxPost operation.
     * @callback module:api/FaxSendingApi~faxPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * This API is for sending a new fax in any fax numbers anywhere in the world
     * @param {module:model/null} faxNumber The fax number of the recipient
     * @param {module:model/null} documentId The id of the document to be sent
     * @param {String} apiKey 
     * @param {module:api/FaxSendingApi~faxPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InlineResponse200}
     */
    this.faxPost = function(faxNumber, documentId, apiKey, callback) {
      var postBody = documentId;

      // verify the required parameter 'faxNumber' is set
      if (faxNumber === undefined || faxNumber === null) {
        throw new Error("Missing the required parameter 'faxNumber' when calling faxPost");
      }

      // verify the required parameter 'documentId' is set
      if (documentId === undefined || documentId === null) {
        throw new Error("Missing the required parameter 'documentId' when calling faxPost");
      }

      // verify the required parameter 'apiKey' is set
      if (apiKey === undefined || apiKey === null) {
        throw new Error("Missing the required parameter 'apiKey' when calling faxPost");
      }


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
        'api_key': apiKey
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = ['application/json', 'application/xml'];
      var accepts = ['application/json', 'application/xml'];
      var returnType = InlineResponse200;

      return this.apiClient.callApi(
        '/fax', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the fileCleanGet operation.
     * @callback module:api/FaxSendingApi~fileCleanGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse2009} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * This API is used for cleaning a document
     * @param {Number} documentId The id of the document
     * @param {String} apiKey 
     * @param {module:api/FaxSendingApi~fileCleanGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InlineResponse2009}
     */
    this.fileCleanGet = function(documentId, apiKey, callback) {
      var postBody = null;

      // verify the required parameter 'documentId' is set
      if (documentId === undefined || documentId === null) {
        throw new Error("Missing the required parameter 'documentId' when calling fileCleanGet");
      }

      // verify the required parameter 'apiKey' is set
      if (apiKey === undefined || apiKey === null) {
        throw new Error("Missing the required parameter 'apiKey' when calling fileCleanGet");
      }


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
        'document_id': documentId,
        'api_key': apiKey
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = ['application/json', 'application/xml'];
      var accepts = ['application/json', 'application/xml'];
      var returnType = InlineResponse2009;

      return this.apiClient.callApi(
        '/file-clean', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the fileGeneratePreviewGet operation.
     * @callback module:api/FaxSendingApi~fileGeneratePreviewGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse20010} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * This API generates a preview of a document
     * @param {Number} documentId The id of the document
     * @param {String} apiKey 
     * @param {module:api/FaxSendingApi~fileGeneratePreviewGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InlineResponse20010}
     */
    this.fileGeneratePreviewGet = function(documentId, apiKey, callback) {
      var postBody = null;

      // verify the required parameter 'documentId' is set
      if (documentId === undefined || documentId === null) {
        throw new Error("Missing the required parameter 'documentId' when calling fileGeneratePreviewGet");
      }

      // verify the required parameter 'apiKey' is set
      if (apiKey === undefined || apiKey === null) {
        throw new Error("Missing the required parameter 'apiKey' when calling fileGeneratePreviewGet");
      }


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
        'document_id': documentId,
        'api_key': apiKey
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = ['application/json', 'application/xml'];
      var accepts = ['application/json', 'application/xml'];
      var returnType = InlineResponse20010;

      return this.apiClient.callApi(
        '/file-generate-preview', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the filesDocumentIDDelete operation.
     * @callback module:api/FaxSendingApi~filesDocumentIDDeleteCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse20011} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * This API deletes a document
     * @param {Number} documentId The id of the document
     * @param {String} apiKey 
     * @param {module:api/FaxSendingApi~filesDocumentIDDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InlineResponse20011}
     */
    this.filesDocumentIDDelete = function(documentId, apiKey, callback) {
      var postBody = null;

      // verify the required parameter 'documentId' is set
      if (documentId === undefined || documentId === null) {
        throw new Error("Missing the required parameter 'documentId' when calling filesDocumentIDDelete");
      }

      // verify the required parameter 'apiKey' is set
      if (apiKey === undefined || apiKey === null) {
        throw new Error("Missing the required parameter 'apiKey' when calling filesDocumentIDDelete");
      }


      var pathParams = {
        'document_id': documentId
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
        'api_key': apiKey
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = ['application/json', 'application/xml'];
      var accepts = ['application/json', 'application/xml'];
      var returnType = InlineResponse20011;

      return this.apiClient.callApi(
        '/files/{document_id}', 'DELETE',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the filesGet operation.
     * @callback module:api/FaxSendingApi~filesGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse2008} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * This API gets all the files of a certain user
     * @param {String} apiKey 
     * @param {Object} opts Optional parameters
     * @param {String} opts.limit The number of record to return
     * @param {String} opts.page The page you want to get
     * @param {module:api/FaxSendingApi~filesGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InlineResponse2008}
     */
    this.filesGet = function(apiKey, opts, callback) {
      opts = opts || {};
      var postBody = null;

      // verify the required parameter 'apiKey' is set
      if (apiKey === undefined || apiKey === null) {
        throw new Error("Missing the required parameter 'apiKey' when calling filesGet");
      }


      var pathParams = {
      };
      var queryParams = {
        'limit': opts['limit'],
        'page': opts['page'],
      };
      var collectionQueryParams = {
      };
      var headerParams = {
        'api_key': apiKey
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = ['application/json', 'application/xml'];
      var accepts = ['application/json', 'application/xml'];
      var returnType = InlineResponse2008;

      return this.apiClient.callApi(
        '/files', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
  };

  return exports;
}));
