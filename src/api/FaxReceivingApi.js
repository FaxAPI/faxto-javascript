/**
 * Fax.to REST API client for Javascript
 * This is Fax.to REST API client for Javascript.
 *
 * OpenAPI spec version: 2.0.0
 * Contact: inquiries@fax.to
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.0-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/InlineResponse20012', 'model/InlineResponse20013', 'model/InlineResponse20014', 'model/InlineResponse20015', 'model/InlineResponse20016', 'model/InlineResponse20017', 'model/InlineResponse2004'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('../model/InlineResponse20012'), require('../model/InlineResponse20013'), require('../model/InlineResponse20014'), require('../model/InlineResponse20015'), require('../model/InlineResponse20016'), require('../model/InlineResponse20017'), require('../model/InlineResponse2004'));
  } else {
    // Browser globals (root is window)
    if (!root.FaxtoRestApiClientForJavascript) {
      root.FaxtoRestApiClientForJavascript = {};
    }
    root.FaxtoRestApiClientForJavascript.FaxReceivingApi = factory(root.FaxtoRestApiClientForJavascript.ApiClient, root.FaxtoRestApiClientForJavascript.InlineResponse20012, root.FaxtoRestApiClientForJavascript.InlineResponse20013, root.FaxtoRestApiClientForJavascript.InlineResponse20014, root.FaxtoRestApiClientForJavascript.InlineResponse20015, root.FaxtoRestApiClientForJavascript.InlineResponse20016, root.FaxtoRestApiClientForJavascript.InlineResponse20017, root.FaxtoRestApiClientForJavascript.InlineResponse2004);
  }
}(this, function(ApiClient, InlineResponse20012, InlineResponse20013, InlineResponse20014, InlineResponse20015, InlineResponse20016, InlineResponse20017, InlineResponse2004) {
  'use strict';

  /**
   * FaxReceiving service.
   * @module api/FaxReceivingApi
   * @version 2.0.0
   */

  /**
   * Constructs a new FaxReceivingApi. 
   * @alias module:api/FaxReceivingApi
   * @class
   * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;


    /**
     * Callback function to receive the result of the areaCodesCountryCodeStateIdGet operation.
     * @callback module:api/FaxReceivingApi~areaCodesCountryCodeStateIdGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse20014} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * This API gets a list of countries with its area code
     * @param {Number} COUNTRY_CODE Indicates the country code in its ISO 3166-1 alpha-3 format
     * @param {Number} STATE_ID The numerical identifier for the state
     * @param {String} apiKey 
     * @param {module:api/FaxReceivingApi~areaCodesCountryCodeStateIdGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InlineResponse20014}
     */
    this.areaCodesCountryCodeStateIdGet = function(COUNTRY_CODE, STATE_ID, apiKey, callback) {
      var postBody = null;

      // verify the required parameter 'COUNTRY_CODE' is set
      if (COUNTRY_CODE === undefined || COUNTRY_CODE === null) {
        throw new Error("Missing the required parameter 'COUNTRY_CODE' when calling areaCodesCountryCodeStateIdGet");
      }

      // verify the required parameter 'STATE_ID' is set
      if (STATE_ID === undefined || STATE_ID === null) {
        throw new Error("Missing the required parameter 'STATE_ID' when calling areaCodesCountryCodeStateIdGet");
      }

      // verify the required parameter 'apiKey' is set
      if (apiKey === undefined || apiKey === null) {
        throw new Error("Missing the required parameter 'apiKey' when calling areaCodesCountryCodeStateIdGet");
      }


      var pathParams = {
        'COUNTRY_CODE': COUNTRY_CODE,
        'STATE_ID': STATE_ID
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
        'api_key': apiKey
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = ['application/json', 'application/xml'];
      var accepts = ['application/json', 'application/xml'];
      var returnType = InlineResponse20014;

      return this.apiClient.callApi(
        '/areacodes/{COUNTRY_CODE}/{STATE_ID}', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the countriesCountryCodeDidGroupsGet operation.
     * @callback module:api/FaxReceivingApi~countriesCountryCodeDidGroupsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse20015} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * This API gets a list of DID groups
     * @param {Number} COUNTRY_CODE Indicates the country code of the DID group in its ISO 3166-1 alpha-3 format
     * @param {Number} areaCode The area code of the DID group
     * @param {String} apiKey 
     * @param {Object} opts Optional parameters
     * @param {Number} opts.didGroupIds Used to display more information about specific DID groups
     * @param {Number} opts.stateId The numerical identifier for the didGroup&#39;s state
     * @param {Number} opts.cityNamePattern A string pattern for the beginning of city name
     * @param {module:api/FaxReceivingApi~countriesCountryCodeDidGroupsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InlineResponse20015}
     */
    this.countriesCountryCodeDidGroupsGet = function(COUNTRY_CODE, areaCode, apiKey, opts, callback) {
      opts = opts || {};
      var postBody = null;

      // verify the required parameter 'COUNTRY_CODE' is set
      if (COUNTRY_CODE === undefined || COUNTRY_CODE === null) {
        throw new Error("Missing the required parameter 'COUNTRY_CODE' when calling countriesCountryCodeDidGroupsGet");
      }

      // verify the required parameter 'areaCode' is set
      if (areaCode === undefined || areaCode === null) {
        throw new Error("Missing the required parameter 'areaCode' when calling countriesCountryCodeDidGroupsGet");
      }

      // verify the required parameter 'apiKey' is set
      if (apiKey === undefined || apiKey === null) {
        throw new Error("Missing the required parameter 'apiKey' when calling countriesCountryCodeDidGroupsGet");
      }


      var pathParams = {
        'COUNTRY_CODE': COUNTRY_CODE
      };
      var queryParams = {
        'didGroupIds': opts['didGroupIds'],
        'stateId': opts['stateId'],
        'cityNamePattern': opts['cityNamePattern'],
        'areaCode': areaCode,
      };
      var collectionQueryParams = {
      };
      var headerParams = {
        'api_key': apiKey
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = ['application/json', 'application/xml'];
      var accepts = ['application/json', 'application/xml'];
      var returnType = InlineResponse20015;

      return this.apiClient.callApi(
        '/countries/{countryCode}/didgroups', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the countriesGet operation.
     * @callback module:api/FaxReceivingApi~countriesGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse20012} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * This API gets a list of countries available in the Fax.to coverage
     * @param {String} apiKey 
     * @param {module:api/FaxReceivingApi~countriesGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InlineResponse20012}
     */
    this.countriesGet = function(apiKey, callback) {
      var postBody = null;

      // verify the required parameter 'apiKey' is set
      if (apiKey === undefined || apiKey === null) {
        throw new Error("Missing the required parameter 'apiKey' when calling countriesGet");
      }


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
        'api_key': apiKey
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = ['application/json', 'application/xml'];
      var accepts = ['application/json', 'application/xml'];
      var returnType = InlineResponse20012;

      return this.apiClient.callApi(
        '/countries', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the incomingFaxesGet operation.
     * @callback module:api/FaxReceivingApi~incomingFaxesGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse2004} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * This API gets a list of incoming faxes
     * @param {String} apiKey 
     * @param {Object} opts Optional parameters
     * @param {String} opts.limit The number of record to return
     * @param {String} opts.page The page you want to get
     * @param {module:api/FaxReceivingApi~incomingFaxesGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InlineResponse2004}
     */
    this.incomingFaxesGet = function(apiKey, opts, callback) {
      opts = opts || {};
      var postBody = null;

      // verify the required parameter 'apiKey' is set
      if (apiKey === undefined || apiKey === null) {
        throw new Error("Missing the required parameter 'apiKey' when calling incomingFaxesGet");
      }


      var pathParams = {
      };
      var queryParams = {
        'limit': opts['limit'],
        'page': opts['page'],
      };
      var collectionQueryParams = {
      };
      var headerParams = {
        'api_key': apiKey
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = ['application/json', 'application/xml'];
      var accepts = ['application/json', 'application/xml'];
      var returnType = InlineResponse2004;

      return this.apiClient.callApi(
        '/incoming-faxes', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the incomingFaxesRecipientGet operation.
     * @callback module:api/FaxReceivingApi~incomingFaxesRecipientGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse2004} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * This API gets a list of incoming faxes for a specific recipient
     * @param {Number} recipient The recipient&#39;s fax number
     * @param {String} apiKey 
     * @param {Object} opts Optional parameters
     * @param {String} opts.limit The number of record to return
     * @param {String} opts.page The page you want to get
     * @param {module:api/FaxReceivingApi~incomingFaxesRecipientGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InlineResponse2004}
     */
    this.incomingFaxesRecipientGet = function(recipient, apiKey, opts, callback) {
      opts = opts || {};
      var postBody = null;

      // verify the required parameter 'recipient' is set
      if (recipient === undefined || recipient === null) {
        throw new Error("Missing the required parameter 'recipient' when calling incomingFaxesRecipientGet");
      }

      // verify the required parameter 'apiKey' is set
      if (apiKey === undefined || apiKey === null) {
        throw new Error("Missing the required parameter 'apiKey' when calling incomingFaxesRecipientGet");
      }


      var pathParams = {
        'recipient': recipient
      };
      var queryParams = {
        'limit': opts['limit'],
        'page': opts['page'],
      };
      var collectionQueryParams = {
      };
      var headerParams = {
        'api_key': apiKey
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = ['application/json', 'application/xml'];
      var accepts = ['application/json', 'application/xml'];
      var returnType = InlineResponse2004;

      return this.apiClient.callApi(
        '/incoming-faxes/{recipient}', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the numbersGet operation.
     * @callback module:api/FaxReceivingApi~numbersGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse20017} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * This API gets a list of numbers to get the current configuration of one or multiple number
     * @param {String} apiKey 
     * @param {Object} opts Optional parameters
     * @param {String} opts.limit The number of record to return
     * @param {String} opts.page The page you want to get
     * @param {module:api/FaxReceivingApi~numbersGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InlineResponse20017}
     */
    this.numbersGet = function(apiKey, opts, callback) {
      opts = opts || {};
      var postBody = null;

      // verify the required parameter 'apiKey' is set
      if (apiKey === undefined || apiKey === null) {
        throw new Error("Missing the required parameter 'apiKey' when calling numbersGet");
      }


      var pathParams = {
      };
      var queryParams = {
        'limit': opts['limit'],
        'page': opts['page'],
      };
      var collectionQueryParams = {
      };
      var headerParams = {
        'api_key': apiKey
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = ['application/json', 'application/xml'];
      var accepts = ['application/json', 'application/xml'];
      var returnType = InlineResponse20017;

      return this.apiClient.callApi(
        '/numbers', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the provisionNumbersGet operation.
     * @callback module:api/FaxReceivingApi~provisionNumbersGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse20016} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * This API gets a list of provisioned numbers
     * @param {Number} didGroupId The id of the did group
     * @param {String} apiKey 
     * @param {module:api/FaxReceivingApi~provisionNumbersGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InlineResponse20016}
     */
    this.provisionNumbersGet = function(didGroupId, apiKey, callback) {
      var postBody = null;

      // verify the required parameter 'didGroupId' is set
      if (didGroupId === undefined || didGroupId === null) {
        throw new Error("Missing the required parameter 'didGroupId' when calling provisionNumbersGet");
      }

      // verify the required parameter 'apiKey' is set
      if (apiKey === undefined || apiKey === null) {
        throw new Error("Missing the required parameter 'apiKey' when calling provisionNumbersGet");
      }


      var pathParams = {
      };
      var queryParams = {
        'did_group_id': didGroupId,
      };
      var collectionQueryParams = {
      };
      var headerParams = {
        'api_key': apiKey
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = ['application/json', 'application/xml'];
      var accepts = ['application/json', 'application/xml'];
      var returnType = InlineResponse20016;

      return this.apiClient.callApi(
        '/countries/didgroups/{did_group_id}/provision', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the statesCountryCodeGet operation.
     * @callback module:api/FaxReceivingApi~statesCountryCodeGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse20013} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * This API gets a list of states of a given country available in the Fax.to coverage
     * @param {Number} COUNTRY_CODE Indicates the country code in its ISO 3166-1 alpha-3 format
     * @param {String} apiKey 
     * @param {module:api/FaxReceivingApi~statesCountryCodeGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InlineResponse20013}
     */
    this.statesCountryCodeGet = function(COUNTRY_CODE, apiKey, callback) {
      var postBody = null;

      // verify the required parameter 'COUNTRY_CODE' is set
      if (COUNTRY_CODE === undefined || COUNTRY_CODE === null) {
        throw new Error("Missing the required parameter 'COUNTRY_CODE' when calling statesCountryCodeGet");
      }

      // verify the required parameter 'apiKey' is set
      if (apiKey === undefined || apiKey === null) {
        throw new Error("Missing the required parameter 'apiKey' when calling statesCountryCodeGet");
      }


      var pathParams = {
        'COUNTRY_CODE': COUNTRY_CODE
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
        'api_key': apiKey
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = ['application/json', 'application/xml'];
      var accepts = ['application/json', 'application/xml'];
      var returnType = InlineResponse20013;

      return this.apiClient.callApi(
        '/states/{COUNTRY_CODE}', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
  };

  return exports;
}));
